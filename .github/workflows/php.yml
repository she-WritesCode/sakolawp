name: PHP Composer

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Generate zip archive
        id: archive
        run: ${{ github.action_path }}/build-zip.sh
        shell: bash

      - name: Create directory for unzip
        run: mkdir -p zipfile
        shell: bash

      - name: Unzip the archive (prevents double zip problem)
        id: unzip
        run: unzip -o ${{ github.event.repository.name }}.zip -d zipfile
        shell: bash

      - name: Upload the archive as an artifact
        id: upload-plugin-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: zipfile
          retention-days: ${{ inputs.retention-days }}

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
